{
  "openapi": "3.0.0",
  "servers": [
    {
      "description": "Local host",
      "url": "http://localhost:3000/api/v3"
    },
    {
      "description": "Singapore Production",
      "url": "https://www.xfers.io/api/v3"
    },
    {
      "description": "Singapore Sandbox for testing",
      "url": "https://sandbox.xfers.io/api/v3"
    },
    {
      "description": "Indonesia Production",
      "url": "https://id.xfers.com/api/v3"
    },
    {
      "description": "Indonesia Sandbox for testing",
      "url": "https://sandbox-id.xfers.com/api/v3"
    }
  ],
  "info": {
    "description": "Welcome to Xfers' API documentation. You can find information on our API endpoint specific to your country.",
    "version": "3",
    "title": "Xfers API",
    "contact": {
      "name": "Contact us through our help desk",
      "url": "https://bit.ly/XfersSupport.'"
    }
  },
  "tags": [
    {
      "name": "Registration",
      "description": "Register and verify new users.",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://xfers.github.io/xfers-merchant-guide"
      }
    },
    {
      "name": "User Account",
      "description": "Manage user account",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://xfers.github.io/xfers-merchant-guide"
      }
    },
    {
      "name": "Withdraw",
      "description": "API for Withdrawal"
    },
    {
      "name": "Loans",
      "description": "Loans Management"
    },
    {
      "name": "Repayments",
      "description": "API for Repayment"
    },
    {
      "name": "Reconciliation",
      "description": "API for Reconciliation"
    }
  ],
  "paths": {
    "/user": {
      "put": {
        "tags": [
          "Registration"
        ],
        "summary": "Submit KYC Data",
        "description": "To provide KYC data in order to change user from unverified status into fully verified status.  \n\nThe image/document provided us must be hosted in an URL then pass the URL to Xfers via this API.  \nMake sure data type for your image is jpeg / png.  \nMaximum size of the image/ document is 10 MB.  \n\nAfter this data is sent, we will do some verifications on our side and may take some time before user gets fully verified.  \n\n#### KYC Verification Notification\nWe highly recommend you to use callback_url in this API to be notified when verification will finish.\n\nIf you put a notify_url in KYC data submission, we will send you the callback with the following parameter when the verification is `successful` or `rejected`. You need to acknowledge the callback by responding with a HTTP 200 status when succesfully processed. In Indonesia, fully verified user will be backed by a savings account.  \nThus, there are required parameters which are mother_maiden_name, id_front_url, selfie_2id_url.  \nAdditional data will speed up the KYC process.",
        "security": [
          {
            "user-api-token": [

            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/user-api-token"
          }
        ],
        "requestBody": {
          "description": "Request Body. Click on Schema for information on the parameters.",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "id_front_url",
                  "selfie_2id_url",
                  "mother_maiden_name"
                ],
                "properties": {
                  "id_front_url": {
                    "type": "string",
                    "description": "Required for Indo, Optional for SG. URL storing the front image of user identity card"
                  },
                  "selfie_2id_url": {
                    "type": "string",
                    "description": "Required for Indo, Optional for SG. URL storing the selfie of user holding their id card"
                  },
                  "mother_maiden_name": {
                    "type": "string",
                    "description": "Required for Indo, Optional for SG. Name of Mother"
                  },
                  "first_name": {
                    "type": "string",
                    "description": "Account holder firstname"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "Account holder lastname"
                  },
                  "email": {
                    "type": "string",
                    "description": "User email"
                  },
                  "date_of_birth": {
                    "type": "string",
                    "description": " Date of birth for account holder in yyyy-mm-dd"
                  },
                  "gender": {
                    "type": "string",
                    "description": "Gender. Possible values: male / female"
                  },
                  "address_line_1": {
                    "type": "string",
                    "description": "Address line 1"
                  },
                  "address_line_2": {
                    "type": "string",
                    "description": "Address line 2"
                  },
                  "nationality": {
                    "type": "string",
                    "description": "Account holder nationality"
                  },
                  "postal_code": {
                    "type": "string",
                    "description": "Address postal code"
                  },
                  "identity_no": {
                    "type": "string",
                    "description": "Account holder national identity number or, KTP number of Indonesian."
                  },
                  "country": {
                    "type": "string",
                    "description": "Account holder country of residence."
                  },
                  "city": {
                    "type": "string",
                    "description": "Account holder city of residence."
                  },
                  "annual_income": {
                    "type": "integer",
                    "description": "Annual income of user in the local currency (SGD/IDR)"
                  },
                  "id_back_url": {
                    "type": "string",
                    "description": "URL storing the back of the user id card"
                  },
                  "proof_of_address_url": {
                    "type": "string",
                    "description": "URL storing the proof of address"
                  },
                  "support_document_1_url": {
                    "type": "string",
                    "description": "URL storing support docuement 1 url"
                  },
                  "support_document_2_url": {
                    "type": "string",
                    "description": "URL storing support docuement 2 url"
                  },
                  "support_document_3_url": {
                    "type": "string",
                    "description": "URL storing support docuement 3 url"
                  },
                  "support_document_4_url": {
                    "type": "string",
                    "description": "URL storing support docuement 4 url"
                  },
                  "support_document_5_url": {
                    "type": "string",
                    "description": "URL storing support docuement 5 url"
                  },
                  "meta_data": {
                    "type": "string",
                    "description": "Addtional data like Jumio info dump."
                  },
                  "place_of_birth": {
                    "type": "string",
                    "description": "Account holder’s birth place."
                  },
                  "blood_type": {
                    "type": "string",
                    "description": " Account holder’s blood type, without rhesus. Possible values: ‘A’, ‘B’, 'AB’, or 'O’"
                  },
                  "rt": {
                    "type": "string",
                    "description": "Only Indonesia. Account holder’s RT according to his/her KTP. Leading zero is optional."
                  },
                  "rw": {
                    "type": "string",
                    "description": "Only Indonesia. Account holder’s RW according to his/her KTP. Leading zero is optional."
                  },
                  "administrative_village": {
                    "type": "string",
                    "description": "Only Indonesia. Account holder’s administrative_village address. In KTP, it is called Kelurahan or Desa."
                  },
                  "state": {
                    "type": "string",
                    "description": "Account holder’s state of residence. In KTP, it is called Provinsi."
                  },
                  "district": {
                    "type": "string",
                    "description": "Only Indonesia. Account holder’s district address. In KTP, it is called Kecamatan."
                  },
                  "religion": {
                    "type": "string",
                    "description": "Only Indonesia. Account holder’s religion according to his/her KTP. Possible Values: 'Islam’, 'Katholik’, 'Kristen Protestan’, 'Hindu’, 'Budha’, 'Kong Hu Cu’, or 'Aliran Kepercayaan’"
                  },
                  "marital_status": {
                    "type": "string",
                    "description": "Only Indonesia. Account holder’s marital status according to his/her KTP. Possible Values: 'Belum Kawin’, 'Kawin’, 'Janda’, or 'Duda’"
                  },
                  "occupation": {
                    "type": "string",
                    "description": "Only Indonesia. Account holder’s occupation according to his/her KTP."
                  },
                  "callback_url": {
                    "deprecated": true,
                    "type": "string",
                    "description": "Only Indonesia. URL to receive callback notifications on account verification changes. This parameter is still supported but is going through deprecation. We strongly advice you to use the dashboard to set callback_url instead."
                  }
                }
              },
              "examples": {
                "Singapore": {
                  "summary": "Singapore",
                  "value": {
                    "id_front_url": "example.com",
                    "selfie_2id_url": "example.com",
                    "mother_maiden_name": "Marry",
                    "first_name": "Doe",
                    "last_name": "John",
                    "email": "example@example.com",
                    "date_of_birth": "1990-01-01",
                    "gender": "male",
                    "address_line_1": "Lorem Ipsum Road",
                    "address_line_2": "#01-01",
                    "nationality": "Singaporean",
                    "postal_code": "123456",
                    "identity_no": "s12345678g",
                    "country": "SG",
                    "city": "Singapore",
                    "annual_income": 60000,
                    "id_back_url": "example.com",
                    "proof_of_address_url": "example.com",
                    "support_document_1_url": "example.com",
                    "support_document_2_url": "example.com",
                    "support_document_3_url": "example.com",
                    "support_document_4_url": "example.com",
                    "support_document_5_url": "example.com",
                    "meta_data": "string",
                    "blood_type": "A",
                    "state": "string",
                    "district": "string"
                  }
                },
                "Indonesia": {
                  "summary": "Indonesia",
                  "value": {
                    "id_front_url": "example.com",
                    "selfie_2id_url": "example.com",
                    "mother_maiden_name": "Marry",
                    "first_name": "Doe",
                    "last_name": "John",
                    "email": "example@example.com",
                    "date_of_birth": "1990-01-01",
                    "gender": "male",
                    "address_line_1": "Lorem Ipsum Road",
                    "address_line_2": "#01-01",
                    "nationality": "Indonesian",
                    "postal_code": "123456",
                    "identity_no": "3171123412341234",
                    "country": "Indonesia",
                    "city": "Jakarta",
                    "annual_income": 60000,
                    "id_back_url": "example.com",
                    "proof_of_address_url": "example.com",
                    "support_document_1_url": "example.com",
                    "support_document_2_url": "example.com",
                    "support_document_3_url": "example.com",
                    "support_document_4_url": "example.com",
                    "support_document_5_url": "example.com",
                    "meta_data": "string",
                    "place_of_birth": "Jakarta",
                    "blood_type": "A",
                    "rt": "001",
                    "rw": "005",
                    "administrative_village": "Meruya Utara",
                    "state": "Jawa Barat",
                    "district": "Kembangan",
                    "religion": "Islam",
                    "marital_status": "Belum Kawin",
                    "occupation": "Pelajar/Mahasiswa"
                  }
                }
              }
            }
          }
        },
        "callbacks": {
          "Xfers' POST request to notify KYC status": {
            "yoururl.com": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "properties": {
                          "id": {
                            "description": "A unique ID for the user",
                            "type": "string",
                            "example": "user_gksj43jgzgqv"
                          },
                          "verification_status": {
                            "description": "`true` or `false`",
                            "type": "string",
                            "example": "user_gksj43jgzgqv"
                          },
                          "reason": {
                            "description": "reason for verification status. Only applicable when verification_status is false",
                            "type": "string",
                            "example": "The NRIC Photo is too blur"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Your server returns this code if it accepts the callback"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "available_balance": "0.32",
                    "ledger_balance": "0.32",
                    "bank_transfer_rates": "0.0",
                    "bank_transfer_fees": "0.45",
                    "first_name": "Winston",
                    "last_name": "Andersen",
                    "date_of_birth": "1986-02-27",
                    "country_of_birth": "",
                    "gender": "male",
                    "email": "winston@xfers.com",
                    "country": "id",
                    "nationality": "Indonesian",
                    "address_line_1": "Blk 712 loyang Avenue 5",
                    "address_line_2": "#01-41",
                    "postal_code": "340712",
                    "nric_type": "",
                    "identity_no": "317201180894005",
                    "nric_issue_date": "",
                    "phone_no": "+6287785725657",
                    "bank_accounts": [
                      {
                        "id": 69,
                        "account_no": "1150006390175",
                        "account_holder_name": "PROD ONLY",
                        "detected_name": "PROD ONLY",
                        "verification_status": "pending",
                        "verified": true,
                        "bank_abbrev": "BCA",
                        "usage": "all"
                      },
                      {
                        "id": 175,
                        "account_no": "1680366060",
                        "account_holder_name": "PROD ONLY",
                        "detected_name": "PROD ONLY",
                        "verification_status": "pending",
                        "verified": true,
                        "bank_abbrev": "BCA",
                        "usage": "all"
                      },
                      {
                        "id": 177,
                        "account_no": "1150006390175",
                        "account_holder_name": "PROD ONLY",
                        "detected_name": "PROD ONLY",
                        "verification_status": "pending",
                        "verified": true,
                        "bank_abbrev": "MANDIRI",
                        "usage": "all"
                      },
                      {
                        "id": 207,
                        "account_no": "1234567890",
                        "account_holder_name": "Some Name",
                        "detected_name": "PROD ONLY",
                        "verification_status": "pending",
                        "verified": true,
                        "bank_abbrev": "BCA",
                        "usage": "all"
                      }
                    ],
                    "annual_income": "",
                    "id_front": "15332940588453-a-blue-sky-with-white-clouds-pv.jpg",
                    "id_front_url": "https://sandbox-xfers-id.s3-ap-southeast-1.amazonaws.com/users/nric_fronts/000/000/374/original/15332940588453-a-blue-sky-with-white-clouds-pv.jpg?AWSAccessKeyId=AKIAJQ3UR7B3U4NXLBNA&Expires=1533297752&Signature=eBPUqBc0tCwmmpbKu5HmISLBiaQ%3D",
                    "selfie_2id": "15332940588453-a-blue-sky-with-white-clouds-pv.jpg",
                    "selfie_2id_url": "https://sandbox-xfers-id.s3-ap-southeast-1.amazonaws.com/users/nric_selfies/000/000/374/original/15332940588453-a-blue-sky-with-white-clouds-pv.jpg?AWSAccessKeyId=AKIAJQ3UR7B3U4NXLBNA&Expires=1533297752&Signature=cK6icTFvQC6XSOPMfLSMjZ1ZVlo%3D",
                    "account_locked": false,
                    "kyc_verified": true,
                    "meta_data": "",
                    "place_of_birth": null,
                    "blood_type": null,
                    "rt_rw": null,
                    "administrative_village": null,
                    "district": null,
                    "religion": null,
                    "marital_status": null,
                    "occupation": null,
                    "mother_maiden_name": "Luna"
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "List of possible errors",
            "content": {
              "application/json": {
                "examples": {
                  "Missing Api Key": {
                    "summary": "Missing API KEY in header",
                    "value": {
                      "error": "Missing API KEY in header"
                    }
                  },
                  "Invalid Api Key": {
                    "summary": "Invalid API KEY",
                    "value": {
                      "error": "Invalid API KEY"
                    }
                  },
                  "Invalid signature": {
                    "summary": "Invalid api_key/signature",
                    "value": {
                      "error": "Invalid api_key/signature"
                    }
                  },
                  "Blood type can only be A, B, AB, O, or -": {
                    "summary": "Blood type can only be A, B, AB, O, or -",
                    "value": {
                      "error": "Blood type can only be A, B, AB, O, or -",
                      "error_code": "XFE12",
                      "error_handling": "Make sure you entered the correct parameters."
                    }
                  },
                  "The birth date you inputted is invalid": {
                    "summary": "The birth date you inputted is invalid",
                    "value": {
                      "error": "The birth date you inputted is invalid",
                      "error_code": "XFE12",
                      "error_handling": "Make sure you entered the correct parameters."
                    }
                  },
                  "RT must be a number or -": {
                    "summary": "RT must be a number or -",
                    "value": {
                      "error": "RT must be a number or -",
                      "error_code": "XFE12",
                      "error_handling": "Make sure you entered the correct parameters."
                    }
                  },
                  "RW must be a number or -": {
                    "summary": "RW must be a number or -",
                    "value": {
                      "error": "RW must be a number or -",
                      "error_code": "XFE12",
                      "error_handling": "Make sure you entered the correct parameters."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "User Account"
        ],
        "summary": "Get Account Balance/User Info",
        "description": "The main usage of this API is to get the current user’s balance to be displayed to user when he checks his account. \nYou can also use this API to check various data of the user such as first_name, last_name.\nDescription of some notable response.",
        "security": [
          {
            "user-api-token": [

            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/user-api-token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "user_gksj43jgzgqv",
                    "available_balance": "2595750.79",
                    "ledger_balance": "2595750.79",
                    "bank_transfer_rates": "0.0",
                    "bank_transfer_fees": "0.45",
                    "first_name": "docs.xfers.io",
                    "last_name": "testingaccount",
                    "date_of_birth": "1990-11-09",
                    "country_of_birth": "SG",
                    "gender": "male",
                    "email": "docs@xfers.com",
                    "country": "sg",
                    "state": "Singapore",
                    "city": "Singapore",
                    "nationality": "Singaporean",
                    "address_line_1": "Blk 71 Ayer Rajah Cresent",
                    "address_line_2": "#02-52",
                    "postal_code": "541121",
                    "nric_type": "",
                    "identity_no": "S8117102G",
                    "nric_issue_date": "",
                    "phone_no": "+6281128125",
                    "bank_accounts": [
                      {
                        "id": 329,
                        "account_no": "800006788912",
                        "account_holder_name": "Tian Wei",
                        "detected_name": "PROD ONLY",
                        "verification_status": "pending",
                        "verified": true,
                        "bank_abbrev": "CIMB_NIAGA",
                        "usage": "all"
                      },
                      {
                        "id": 561,
                        "account_no": "2480096820",
                        "account_holder_name": null,
                        "detected_name": "PROD ONLY",
                        "verification_status": "pending",
                        "verified": true,
                        "bank_abbrev": "BCA",
                        "usage": "all"
                      }
                    ],
                    "annual_income": "",
                    "id_front": "15357011921535007959147096578.jpg",
                    "id_front_url": "https://sandbox-xfers-id.s3-ap-southeast-1.amazonaws.com/users/nric_fronts/000/000/383/original/15357011921535007959147096578.jpg?AWSAccessKeyId=AKIAJQ3UR7B3U4NXLBNA&Expires=1540979796&Signature=JVrLUGZUtYhfhef4mNXD0L45X%2BA%3D",
                    "selfie_2id": "15357011921535007959147096578.jpg",
                    "selfie_2id_url": "https://sandbox-xfers-id.s3-ap-southeast-1.amazonaws.com/users/nric_selfies/000/000/383/original/15357011921535007959147096578.jpg?AWSAccessKeyId=AKIAJQ3UR7B3U4NXLBNA&Expires=1540979796&Signature=UUMSRP%2FWw55PY23oCLBYF5moZ60%3D",
                    "account_locked": false,
                    "google_auth_enabled": false,
                    "kyc_verified": true,
                    "kyc_needed": true,
                    "meta_data": "",
                    "display_name": "XfersDocsTest",
                    "avatar": "cardProfileDefault.png",
                    "avatar_url": "cardProfileDefault.png",
                    "is_guest": false,
                    "is_trial": true,
                    "place_of_birth": null,
                    "blood_type": null,
                    "rt_rw": null,
                    "administrative_village": null,
                    "district": null,
                    "religion": null,
                    "marital_status": null,
                    "occupation": null,
                    "mother_maiden_name": "Putras"
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "List of possible errors",
            "content": {
              "application/json": {
                "examples": {
                  "Missing Api Key": {
                    "summary": "Missing API KEY in header",
                    "value": {
                      "error": "Missing API KEY in header"
                    }
                  },
                  "Invalid Api Key": {
                    "summary": "Invalid API KEY",
                    "value": {
                      "error": "Invalid API KEY"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/bank_account/{bank_account_id}/withdraw": {
      "post": {
        "tags": [
          "Withdraw"
        ],
        "summary": "Create Withdrawal",
        "description": "Withdrawal Time varies upon country. For Indonesia, withdrawal time is instantenous. For Singapore, withdrawal time depends on whether it is an express withdrawal.\nWithdrawal on Behalf\nIf you wish to withdraw to a bank account not belonging to you, add in user_api_token in the params.\nBehind the scenes, Xfers does a payout of funds from your Xfers account to that user’s Xfers account, followed by a withdrawal. This is required for compliance purposes as we cannot directly withdraw funds to a bank account not belonging to you.",
        "security": [
          {
            "user-api-token": [

            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/user-api-token"
          },
          {
            "name": "bank_account_id",
            "in": "path",
            "description": "The ID of the bank account. You can retrieve this from in the response of Create Bank Account and List Bank Account API",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string",
              "example": "175"
            }
          }
        ],
        "requestBody": {
          "description": "Request Body. Click on Schema for information on the parameters.",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "amount",
                  "idempotency_id"
                ],
                "properties": {
                  "amount": {
                    "type": "string",
                    "description": "Transaction Amount"
                  },
                  "idempotency_id": {
                    "type": "string",
                    "description": "Unique ref no provided by you to prevent double transaction, this cannot be repeated, Currently only activated for Indonesia"
                  },
                  "user_api_token": {
                    "type": "string",
                    "description": "Use this param if you want to withdraw to another user’s bank account instead of your own."
                  }
                }
              },
              "examples": {
                "Request Body Example": {
                  "summary": "Request Body Example",
                  "value": {
                    "amount": "1200000",
                    "idempotency_id": "Order_1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful"
          }
        }
      }
    },
    "/loans": {
      "post": {
        "tags": [
          "Loans"
        ],
        "summary": "Create Loan",
        "description": "Creating a Loan. We will pass this loan asynchronously and give callback after complete.",
        "security": [
          {
            "user-api-token": [

            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/user-api-token"
          }
        ],
        "requestBody": {
          "description": "Request Body. Click on Schema for information on the parameters.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "customer_data",
                  "loan_data",
                  "collateral_data",
                  "installment_data"
                ],
                "properties": {
                  "customer_data": {
                    "$ref": "#/components/schemas/customer_data"
                  },
                  "loan_data": {
                    "$ref": "#/components/schemas/loan_data"
                  },
                  "collateral_data": {
                    "$ref": "#/components/schemas/collateral_data"
                  },
                  "installment_data": {
                    "$ref": "#/components/schemas/installment_data"
                  }
                }
              },
              "examples": {
                "Request Body Example": {
                  "$ref": "#/components/examples/create_loan"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful"
          }
        }
      }
    },
    "/loans/{id}": {
      "get": {
        "tags": [
          "Loans"
        ],
        "summary": "Get Loan Details",
        "description": "Get the Detail of a Loan Request Given The id of a its loan.\nAvailable Status:\ncreated -> after customer just created the loan to us\nloan_request_processing -> after we called sampoerna loan API and no callback yet\nloan_request_approved -> after we just received sampoerna callback and it is approved\nloan_request_rejected -> after we just received sampoerna callback and it is rejected\nwithdrawal_on_behalf_processing -> after they call our WOB API, WOB still in pending state\nwithdrawal_on_behalf_completed -> after they call our WOB API, WOB still in completed state\nwithdrawal_on_behalf_failed -> after they call our WOB API, WOB in bank_rejected, they need to retry or this is final state\ndisbursement_report_processing -> after customer call our disbursement report API\ndisbursement_report_completed -> after we just call sampoerna disbursement API and completed\ndisbursement_report_failed-> after we just call sampoerna disbursement API and failed",
        "security": [
          {
            "X-XFERS-USER-API-KEY": [

            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-XFERS-USER-API-KEY"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Loan ID. You can find this from the response when you create loan.",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          }
        }
      }
    },
    "/loans/{id}/disbursement_reports": {
      "post": {
        "tags": [
          "Disbursements"
        ],
        "summary": "Create Disbursement Report",
        "description": "Create a disbursement report to complete a loan disbursement process. We will pass this loan asynchronously and give callback after complete",
        "security": [
          {
            "user-api-token": [

            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/user-api-token"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Loan ID. You can find this from the response when you create loan.",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          }
        }
      }
    },
    "/loans/{loan_id}/repayments": {
      "post": {
        "tags": [
          "Repayments"
        ],
        "summary": "Create Repayment",
        "description": "Create a disbursement report to complete a loan disbursement process. We will pass this loan asynchronously and give callback after complete",
        "security": [
          {
            "user-api-token": [

            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/user-api-token"
          },
          {
            "name": "loan_id",
            "in": "path",
            "description": "Loan ID. You can find this from the response when you create loan.",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request Body. Click on Schema for information on the parameters.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "amount",
                  "collection_fee",
                  "idempotency_id"
                ],
                "properties": {
                  "amount": {
                    "type": "string",
                    "description": "amount of repayment"
                  },
                  "collection_fee": {
                    "type": "string",
                    "description": "collection fee"
                  },
                  "idempotency_id": {
                    "type": "string",
                    "description": "idempotency id to indicate your transaction"
                  }
                }
              },
              "examples": {
                "Request Body Example": {
                  "summary": "Request Body Example",
                  "value": {
                    "amount": "1000.50",
                    "collection_fee": "10.50",
                    "idempotency_id": "order_123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful"
          }
        }
      },
      "get": {
        "tags": [
          "Repayments"
        ],
        "summary": "List Repayment",
        "description": "Get the Details of a repayment given a loan id",
        "security": [
          {
            "user-api-token": [

            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/user-api-token"
          },
          {
            "name": "loan_id",
            "in": "path",
            "description": "Loan ID. You can find this from the response when you create loan.",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          }
        }
      }
    },
    "/loans/{loan_id}/repayments/{loan_repayment_id}": {
      "get": {
        "tags": [
          "Repayments"
        ],
        "summary": "Get Repayment",
        "description": "Get the Detail of a repayment given its id",
        "security": [
          {
            "user-api-token": [

            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/user-api-token"
          },
          {
            "name": "loan_id",
            "in": "path",
            "description": "Loan ID. You can find this from the response when you create loan.",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loan_repayment_id",
            "in": "path",
            "description": "Loan ID. You can find this from the response when you create loan.",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          }
        }
      }
    },
    "/loans/reconciliations": {
      "post": {
        "tags": [
          "Reconciliation"
        ],
        "summary": "Loans Reconciliation",
        "description": "Get Outstanding Loans. Response of this reconciliation request will be in callback.",
        "security": [
          {
            "X-XFERS-USER-API-KEY": [

            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-XFERS-USER-API-KEY"
          }
        ],
        "requestBody": {
          "description": "Request Body. Click on Schema for information on the parameters.",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "page": {
                    "type": "integer",
                    "default": 1,
                    "description": "The page number of loan_reconciliation. Starts with 1. Automatically set to 1 if this is not present while per_page is present."
                  },
                  "per_page": {
                    "type": "string",
                    "description": " The amount of outstanding loans per page. If this is null or not present, will returns all outstanding loans."
                  },
                  "from": {
                    "type": "string",
                    "description": "Starting Date of the recon time."
                  },
                  "to": {
                    "type": "string",
                    "description": "Ending Date of the recon time."
                  }
                }
              },
              "examples": {
                "Request Body Example": {
                  "summary": "Request Body Example",
                  "value": {
                    "page": "1",
                    "per_page": "120000.0",
                    "from": "2015-01-26",
                    "to": "2020-01-30"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful"
          }
        }
      }
    },
    "/loans/<loan_id>/disbursements": {
      "post": {
        "tags": [
          "Disbursements"
        ],
        "summary": "Create Loan Disbursement",
        "description": "Note: Disbursement and Withdrawal will be used synonymously. Disbursement is instantenous.\nDisbursement (Withdrawal on Behalf)\nIf you wish to disburse to a bank account not belonging to you, add in user_api_token in the params.\nDisbursement (a.k.a Withdrawal) notification\nAfter you setup your callback url in {{base-api-url}}/merchant_settings/callback_settings, we will send you the callback with the following parameter when the withdrawal is completed or failed. You need to acknowledge the callback by responding with a HTTP 200 status when succesfully processed.\nWe will send completed callback after we have confirmed with the bank that the money has been sent.",
        "security": [
          {
            "user-api-token": [

            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/user-api-token"
          },
          {
            "name": "loan_id",
            "in": "path",
            "description": "Loan ID. You can find this from the response when you create loan.",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request Body. Click on Schema for information on the parameters.",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "bank_account_id",
                  "amount",
                  "idempotency_id"
                ],
                "properties": {
                  "bank_account_id": {
                    "type": "string",
                    "description": " User Bank Account id"
                  },
                  "amount": {
                    "type": "string",
                    "description": "Transaction Amount"
                  },
                  "idempotency_id": {
                    "type": "string",
                    "description": "Unique ref no provided by you to prevent double transaction, this cannot be repeated, Currently only activated for Indonesia."
                  },
                  "user_api_token": {
                    "type": "string",
                    "description": "Use this param if you want to withdraw to another user’s bank account instead of your own. This is your user API token which you can retrieve from the get token API response"
                  }
                }
              },
              "examples": {
                "Request Body Example": {
                  "summary": "Request Body Example",
                  "value": {
                    "bank_account_id": "12345678",
                    "amount": "120000.0",
                    "idempotency_id": "Order_1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful"
          }
        }
      },
      "get": {
        "tags": [
          "Disbursements"
        ],
        "summary": "List Loan Disbursement",
        "description": "This API will be used to get a list of the last 10 withdrawal requests associated with the loan",
        "security": [
          {
            "user-api-token": [

            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/user-api-token"
          },
          {
            "name": "loan_id",
            "in": "path",
            "description": "Loan ID. You can find this from the response when you create loan.",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          }
        }
      }
    },
    "/loans/{loan_id}/disbursements/{id}": {
      "get": {
        "tags": [
          "Disbursements"
        ],
        "summary": "Get Loan Disbursement",
        "description": "This API is used to get the current status of the loan disbursement (in the form of a withdrawal contract), in case the callback of the disbursement status is unclear.",
        "security": [
          {
            "user-api-token": [

            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/user-api-token"
          },
          {
            "name": "loan_id",
            "in": "path",
            "description": "Loan ID. You can find this from the response when you create loan.",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Disbursement ID. You can find this from the response when you create loan.",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Xfers",
    "url": "https://www.xfers.com"
  },
  "components": {
    "headers": {
      "X-XFERS-APP-API-KEY": {
        "required": true,
        "description": "Retrive this API key from the dashboard",
        "schema": {
          "type": "string"
        }
      }
    },
    "parameters": {
      "X-XFERS-APP-API-KEY": {
        "name": "X-XFERS-APP-API-KEY",
        "in": "header",
        "description": "Retrive this API key from the dashboard",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "X-XFERS-USER-API-KEY": {
        "name": "X-XFERS-USER-API-KEY",
        "in": "header",
        "description": "Retrive this API key from the dashboard",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "user-api-token": {
        "name": "X-XFERS-USER-API-KEY",
        "in": "header",
        "description": "This is your user's api token. You can retrieve this from the Get Token API.",
        "required": false,
        "schema": {
          "type": "string"
        }
      }
    },
    "examples": {
      "create_loan": {
        "summary": "Request Body Example",
        "value": {
          "customer_data": {
            "din": "string content",
            "custtype": 1,
            "fullname": "name01",
            "custname": "name01",
            "title": "sh",
            "custaddress": "string content",
            "custrt": "string content",
            "custrw": "string content",
            "custkel": "string content",
            "custkec": "string content",
            "custcity": "string content",
            "custprov": "string content",
            "custzip": "string content",
            "custdati": "0102",
            "idtype": 1,
            "idnumber": "idnumber",
            "idexpired": "2019-01-01",
            "gender": 1,
            "maritalstatus": 2,
            "birthdate": "1980-01-04",
            "birthplace": "bekasi",
            "birthdati": "0102",
            "worksince": "2014-01-01",
            "employeests": 1,
            "contractend": "2014-01-01",
            "lasteducation": "0100",
            "economycode": "011110",
            "debiturcode": "907",
            "mmn": "ibu kandung",
            "npwp": "no npwp",
            "homestatus": 1,
            "livedsince": "2000-01-01",
            "phonearea": "area",
            "phoneno": "12323535",
            "mobileno": 878978979.0,
            "dependent": 0,
            "grossincome": 5000000,
            "expenses": 1000000,
            "sameidhomeaddr": 1,
            "custaddresshome": "string content",
            "custrthome": "string content",
            "custrwhome": "string content",
            "custkelhome": "string content",
            "custkechome": "string content",
            "custcityhome": "string content",
            "custprovhome": "string content",
            "custziphome": "string content",
            "custdatihome": "0102",
            "spousename": "string content",
            "spousebirthdate": "1980-01-01",
            "spousebirthplace": "string content",
            "spouseidtype": 1,
            "spouseidnumber": "string content",
            "spousephoneno": "string content",
            "spousemobileno": "string content",
            "spouseoffice": "string content",
            "spouseoffinephone": "string content",
            "relativestype": 1,
            "relativesname": "string content",
            "custaddressrel": "string content",
            "custrtrel": "string content",
            "custrwrel": "string content",
            "custkelrel": "string content",
            "custkecrel": "string content",
            "custcityrel": "string content",
            "custprovrel": "string content",
            "custziprel": "string content",
            "phonenorel": "string content",
            "companyname": "string content",
            "companyaddr": "string content",
            "companycity": "string content",
            "companyzip": "string content",
            "companyphone": "string content",
            "deedno": "string content",
            "deeddate": "2019-01-01",
            "corporatetype": "string content",
            "jobid": "002",
            "jobtitleid": "50",
            "countryid": "id",
            "branchcode": "000"
          },
          "loan_data": {
            "refno": "ref11",
            "objectvalue": "10000000.0",
            "principaltotal": "1000000.0",
            "tenor": "1",
            "loantype": 0,
            "effectiverate": "12.0",
            "installment": "1000000.0",
            "firstinstdate": "2018-11-01",
            "admfee": "0.0",
            "inscode": "001",
            "inspremi": "0.0",
            "insonloan": "0.0",
            "installmenttype": 1,
            "branchcode": "000",
            "typeofuseid": "89",
            "orientationofuseid": "9",
            "debiturcatid": "10",
            "portfoliocatid": "string content",
            "credittypeid": "20",
            "creditattributeid": "20",
            "creditcategoryid": "10",
            "fincat": "000",
            "installfeeaccount": "50000.0"
          },
          "collateral_data": {
            "productcode": "C304",
            "merkcode": "mrk",
            "modelcode": "mdl",
            "collateralno": "collno939854",
            "collateraldate": "2018-01-01",
            "collateraladdress": "string content",
            "collateralcityid": "0102",
            "collateralname": "collname",
            "collateralownerid": "collid935790",
            "collateraldesctype": "string content",
            "engineno": "string content",
            "chassisno": "string content",
            "collateralyear": 2018,
            "buildyear": 2018,
            "condition": 1,
            "color": "string content",
            "collateralkind": "KTA01",
            "collateralpurpose": "string content",
            "policeno": "string",
            "stnkexpired": "2030-01-01",
            "surveydate": "2018-01-01",
            "bindtypecode": "99",
            "collateraltypecode": "250",
            "sbrankcode": "string content",
            "collateralvalue": 100000000,
            "dealercode": "TK"
          },
          "installment_data": {
            "period": "1.0",
            "duedate": "2018-12-12",
            "principal": "1000000.0",
            "interest": "10000000.0",
            "installfee": "50000.0"
          }
        }
      }
    },
    "responses": {
      "missing_api_key": {
        "description": "Error Missing API key",
        "content": {
          "application/json": {
            "schema": {
              "example": {
                "error": "Missing API KEY in header"
              }
            }
          }
        }
      },
      "invalid_api_key": {
        "description": "Error Invalid API key",
        "content": {
          "application/json": {
            "schema": {
              "example": {
                "error": "Invalid API KEY"
              }
            }
          }
        }
      }
    },
    "schemas": {
      "customer_data": {
        "type": "object",
        "properties": {
          "din": {
            "type": "string"
          },
          "custtype": {
            "type": "integer"
          },
          "fullname": {
            "type": "string"
          },
          "custname": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "custaddress": {
            "type": "string"
          },
          "custrt": {
            "type": "string"
          },
          "custrw": {
            "type": "string"
          },
          "custkel": {
            "type": "string"
          },
          "custkec": {
            "type": "string"
          },
          "custcity": {
            "type": "string"
          },
          "custprov": {
            "type": "string"
          },
          "custzip": {
            "type": "string"
          },
          "custdati": {
            "type": "integer"
          },
          "idtype": {
            "type": "integer"
          },
          "idnumber": {
            "type": "string"
          },
          "idexpired": {
            "type": "string"
          },
          "gender": {
            "type": "integer"
          },
          "maritalstatus": {
            "type": "integer"
          },
          "birthdate": {
            "type": "string"
          },
          "birthplace": {
            "type": "string"
          },
          "birthdati": {
            "type": "string"
          },
          "worksince": {
            "type": "string"
          },
          "employeests": {
            "type": "string"
          },
          "contractend": {
            "type": "string"
          },
          "lasteducation": {
            "type": "integer"
          },
          "economycode": {
            "type": "integer"
          },
          "debiturcode": {
            "type": "integer"
          },
          "mmn": {
            "type": "string"
          },
          "npwp": {
            "type": "string"
          },
          "homestatus": {
            "type": "integer"
          },
          "livedsince": {
            "type": "string"
          },
          "phonearea": {
            "type": "string"
          },
          "phoneno": {
            "type": "integer"
          },
          "mobileno": {
            "type": "integer"
          },
          "dependent": {
            "type": "integer"
          },
          "grossincome": {
            "type": "integer"
          },
          "expenses": {
            "type": "integer"
          },
          "sameidhomeaddr": {
            "type": "integer"
          },
          "custaddresshome": {
            "type": "string"
          },
          "custrthome": {
            "type": "string"
          },
          "custrwhome": {
            "type": "string"
          },
          "custkelhome": {
            "type": "string"
          },
          "custkechome": {
            "type": "string"
          },
          "custcityhome": {
            "type": "string"
          },
          "custprovhome": {
            "type": "string"
          },
          "custziphome": {
            "type": "string"
          },
          "custdatihome": {
            "type": "integer"
          },
          "spousename": {
            "type": "string"
          },
          "spousebirthdate": {
            "type": "string"
          },
          "spousebirthplace": {
            "type": "string"
          },
          "spouseidtype": {
            "type": "string"
          },
          "spouseidnumber": {
            "type": "string"
          },
          "spousephoneno": {
            "type": "string"
          },
          "spousemobileno": {
            "type": "string"
          },
          "spouseoffice": {
            "type": "string"
          },
          "spouseoffinephone": {
            "type": "string"
          },
          "relativestype": {
            "type": "string"
          },
          "relativesname": {
            "type": "string"
          },
          "custaddressrel": {
            "type": "string"
          },
          "custrtrel": {
            "type": "string"
          },
          "custrwrel": {
            "type": "string"
          },
          "custkelrel": {
            "type": "string"
          },
          "custkecrel": {
            "type": "string"
          },
          "custcityrel": {
            "type": "string"
          },
          "custprovrel": {
            "type": "string"
          },
          "custziprel": {
            "type": "string"
          },
          "phonenorel": {
            "type": "string"
          },
          "companyname": {
            "type": "string"
          },
          "companyaddr": {
            "type": "string"
          },
          "companycity": {
            "type": "string"
          },
          "companyzip": {
            "type": "string"
          },
          "companyphone": {
            "type": "string"
          },
          "deedno": {
            "type": "string"
          },
          "deeddate": {
            "type": "string"
          },
          "corporatetype": {
            "type": "string"
          },
          "jobid": {
            "type": "integer"
          },
          "jobtitleid": {
            "type": "integer"
          },
          "countryid": {
            "type": "string"
          },
          "branchcode": {
            "type": "string"
          }
        }
      },
      "loan_data": {
        "type": "object",
        "properties": {
          "refno": {
            "type": "string"
          },
          "objectvalue": {
            "type": "string"
          },
          "principaltotal": {
            "type": "string"
          },
          "tenor": {
            "type": "integer"
          },
          "loantype": {
            "type": "integer"
          },
          "effectiverate": {
            "type": "string"
          },
          "installment": {
            "type": "string"
          },
          "firstinstdate": {
            "type": "string"
          },
          "admfee": {
            "type": "string"
          },
          "inscode": {
            "type": "string"
          },
          "inspremi": {
            "type": "string"
          },
          "insonloan": {
            "type": "string"
          },
          "installmenttype": {
            "type": "integer"
          },
          "branchcode": {
            "type": "integer"
          },
          "typeofuseid": {
            "type": "integer"
          },
          "orientationofuseid": {
            "type": "integer"
          },
          "debiturcatid": {
            "type": "integer"
          },
          "portfoliocatid": {
            "type": "string"
          },
          "credittypeid": {
            "type": "integer"
          },
          "creditattributeid": {
            "type": "integer"
          },
          "creditcategoryid": {
            "type": "integer"
          },
          "fincat": {
            "type": "integer"
          },
          "installfeeaccount": {
            "type": "string"
          }
        }
      },
      "collateral_data": {
        "type": "object",
        "properties": {
          "productcode": {
            "type": "string"
          },
          "merkcode": {
            "type": "string"
          },
          "modelcode": {
            "type": "string"
          },
          "collateralno": {
            "type": "string"
          },
          "collateraldate": {
            "type": "string"
          },
          "collateraladdress": {
            "type": "string"
          },
          "collateralcityid": {
            "type": "integer"
          },
          "collateralname": {
            "type": "string"
          },
          "collateralownerid": {
            "type": "string"
          },
          "collateraldesctype": {
            "type": "string"
          },
          "engineno": {
            "type": "string"
          },
          "chassisno": {
            "type": "string"
          },
          "collateralyear": {
            "type": "integer"
          },
          "buildyear": {
            "type": "integer"
          },
          "condition": {
            "type": "integer"
          },
          "color": {
            "type": "string"
          },
          "collateralkind": {
            "type": "string"
          },
          "collateralpurpose": {
            "type": "string"
          },
          "policeno": {
            "type": "string"
          },
          "stnkexpired": {
            "type": "string"
          },
          "surveydate": {
            "type": "string"
          },
          "bindtypecode": {
            "type": "string"
          },
          "collateraltypecode": {
            "type": "integer"
          },
          "sbrankcode": {
            "type": "string"
          },
          "collateralvalue": {
            "type": "integer"
          },
          "dealercode": {
            "type": "integer"
          }
        }
      },
      "installment_data": {
        "type": "object",
        "properties": {
          "period": {
            "type": "string"
          },
          "duedate": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interest": {
            "type": "string"
          },
          "installfee": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "name": {
        "type": "apiKey",
        "name": "api_key",
        "in": "query"
      },
      "X-XFERS-APP-API-KEY": {
        "type": "apiKey",
        "name": "X-XFERS-APP-API-KEY",
        "in": "header",
        "description": "You can retrieve this from the dashboard"
      },
      "X-XFERS-USER-API-KEY": {
        "type": "apiKey",
        "name": "X-XFERS-USER-API-KEY",
        "in": "header",
        "description": "You can retrieve this from the dashboard"
      },
      "user-api-token": {
        "type": "apiKey",
        "name": "X-XFERS-USER-API-KEY",
        "in": "header",
        "description": "Your user API token which you can retrieve from the get token API response."
      }
    }
  }
}
